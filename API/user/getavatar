#! /usr/bin/ruby

require 'rubygems'
require '../functions/connect.rb'
require 'xml'
require 'rack'

$dbh=dbconnect

XML::Error.set_handler(&XML::Error::QUIET_HANDLER)

class UserGetAvatar

    def call(env)
        
        req= Rack::Request.new(env);
	
        #kill the server from outside
		c=req.query_string()
		if(c=="die")
            puts "FAAAAAAAAAAAATHER"
    		abort
		end

		#Errorhandling
        #read the xml file    
		begin
			doc = XML::Document.string(req.body.read);			
		rescue Exception => e
			xml = "<error no='1'>XML ERROR while calling  user/getavatar: #{e.message}</error>"
			return [501,{"Content-Type" => "text/xml"},[xml]] 
		end
		#done reading xml file

		#read the rng file
		begin
			relaxng_doc = XML::Document.file('../../interface/user/getavatar/request.rng')
			relaxng_sch = XML::RelaxNG.document(relaxng_doc)
			#validate relax ng    
				begin 
					doc.validate_relaxng(relaxng_sch)
				rescue Exception => e
					xml = "<error no='7'>XML ERROR: #{e.message}</error>"
					return [501,{"Content-Type" => "text/xml"},[xml]]                
				end
            #done validating
		rescue
			xml = "<error no='5'>Couldn't open relaxng file. Check permissions or path</error>"
			return [501,{"Content-Type" => "text/xml"},[xml]]
		end
        #done reading rng file
      
        username = doc.find("/gts/username").first.content

        st_getavatar = $dbh.prepare("SELECT username,avatar FROM geousers WHERE username=?")
        st_getavatar.execute(username)
                 
        xmlresponse = "<gts query='user/getavatar'>"
        
        while row = st_getavatar.fetch do
            xmlresponse = xmlresponse+"<url username=' #{row[0]}'>#{row[1]}</url>"
        end

        xmlresponse = xmlresponse+"</gts>"
        return [200,{"Content-Type" => "text/xml"},[xmlresponse]]           
       
    end #end call

end #end UserGetAvatar

Rack::Handler::FastCGI.run UserGetAvatar.new
