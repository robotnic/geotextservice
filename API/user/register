#! /usr/bin/ruby

require 'rubygems'
require 'connect.rb'
require 'xml'
require 'rack'
require 'digest/sha1'
require 'uuid.rb'

XML::Error.set_handler(&XML::Error::QUIET_HANDLER)

class UserRegister
    def call(env)
  
    req = Rack::Request.new(env)

#kill the server from outside
c=req.query_string()
if(c=="die")
abort
end
 
    begin 
        doc = XML::Document.string(req.body.read)
    rescue Exception => e
        xml = "<error no='1'>XML ERROR: #{e.message}</error>"
        return [200,{"Content-Type" => "text/xml"},[xml]]                
     end

#Errorhandling

#read the file
    begin
        relaxng_doc = XML::Document.file('../../interface/user/register/request.rng')
        relaxng_sch = XML::RelaxNG.document(relaxng_doc)
        #validate relax ng    
            begin 
                doc.validate_relaxng(relaxng_sch)
            rescue Exception => e
                 xml = "<error no='2'>XML Validation ERROR: #{e.message}</error>"
                return [200,{"Content-Type" => "text/xml"},[xml]]                
            end

    rescue
        xml = "<error no='3'>Couldn't open relaxng file. Check permissions or path</error>"
        return [200,{"Content-Type" => "text/xml"},[xml]]
    end

    userxml = doc.find("/gts/username")
    passxml = doc.find("/gts/password")

    username = userxml.first.content
    password = Digest::SHA1.hexdigest(passxml.first.content)

    create(username,password)

    end
    def create(username,password)
        dbh = dbconnect

        sql = "insert into geousers (username,password) values (?,?);"
        begin 
           st = dbh.prepare(sql)
           st.execute(username,password)

           key = UUID.create.to_s
    
        #   login(username,key)
           sql2 = "insert into geologgedin (username, logginschlussel) values (?,?);"

           st2 = dbh.prepare(sql2)
           st2.execute(username,key)

           xml = "<gts query='user/register'><success key='#{key}'/></gts>"
           return [200,{"Content-Type" => "text/xml"},[xml]]  
 
       rescue Exception => e
           xml = "<error no='6'>DB Error: #{e.message}.</error>"
           return [200,{"Content-Type" => "text/xml"},[xml]]  
        end
    end
#    def login(username, key)
#        dbh = dbconnect
#        sql = "insert into geologgedin (username,logginschlussel) values (?,?);"
#        begin
#           st = dbh.prepare(sql)
#           st.execute(username, key)
 #          xml = "<gts query='user/login'><success key='#{key}'/></gts>"
#           return [200,{"Content-Type" => "text/xml"},[xml]]  
#       rescue Exception => e
#           xml = "<error no='6'>DB Error: #{e.message}.</error>"
#           puts [200,{"Content-Type" => "text/xml"},[xml]]  
#        end
#    end
end

Rack::Handler::FastCGI.run UserRegister.new
