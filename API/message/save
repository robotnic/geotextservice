#! /usr/bin/ruby

require 'rubygems'
require 'connect.rb'
require 'xml'
require 'rack'

$dbh=dbconnect   #hier eine global variable mit $



class MessageSave

  
    def call(env)

		req= Rack::Request.new(env);

		#Errorhandling
		
		begin
			doc = XML::Document.string(req.body.read);
		rescue Exception => e
			xml = "<error no='1'>XML ERROR: #{e.message}</error>"
			return [200,{"Content-Type" => "text/xml"},[xml]] 
		end
		

		#read the file
		begin
			relaxng_doc = XML::Document.file('../../interface/message/save/request.rng')
			relaxng_sch = XML::RelaxNG.document(relaxng_doc)
			#validate relax ng    
				begin 
					doc.validate_relaxng(relaxng_sch)
				rescue Exception => e
					xml = "<error no='7'>XML ERROR: #{e.message}</error>"
					return [200,{"Content-Type" => "text/xml"},[xml]]                
				end

		rescue
			xml = "<error no='5'>Couldn't open relaxng file. Check permissions or path</error>"
			return [200,{"Content-Type" => "text/xml"},[xml]]
		end
				
		#kill the server from outside
		c=req.query_string()
		if(c=="die")
		abort
		end
	

    doc.find("/gts/content").each {|node| 
      lon=node.attributes.get_attribute("lon"); 
      lat=node.attributes.get_attribute("lat");
      
      begin 
        id = node.attributes.get_attribute("id");
      rescue
        id = nil;
      end                
    
      begin                                        
        content = node.first.content;
      rescue
        return
      end
    
      writetodb(lat, lon, content,id);
    };
	end
  
  def writetodb(lat,lon,message,id=nil)
    puts 
   

      if id.nil?
        sql = "insert into geopoints(lat,lon,message) values (?,?,?);"
    
        st=$dbh.prepare(sql);
    
        st.execute(lat,lon,message);
    
      else
        sql = "update geopoints set lat=?,lon=?,message=? where id =?;"
        
        st=$dbh.prepare(sql);
        
                
        st.execute(lat,lon,message,id);
      end
  end
  
  
end

Rack::Handler::FastCGI.run MessageSave.new