#! /usr/bin/ruby

require 'rubygems'
require "connect.rb"
require "xml"
require 'rack'

class MessageSave
    def call(env)

    req= Rack::Request.new(env)
    doc = XML::Document.string(req.body.read);
    
    #Errorhandling (Check with RNG file)
    	relaxng_document = XML::Document.file('../../interface/message/save/request.rng')
		relaxng_schema = XML::RelaxNG.document(relaxng_document)
		#instance = XML::Document.file(doc)

			begin
        		doc.validate_relaxng(relaxng_schema)
        		
#			rescue Exception => e
#	        		puts e.message
#			else
				    puts "ok"

			end

	#Errorhandling-end
    
    c=req.query_string()

    if(c=="die")
        abort
    end


    doc.find("/gts/content").each {|node| 
    lon=node.attributes.get_attribute("lon").value; 
    lat=node.attributes.get_attribute("lat").value;
                                           
    begin 
        id = node.attributes.get_attribute("id").value;
    rescue
        id = nil;
    end                
    
    begin                                        
        content = node.content;
    rescue
        return
    end
    
    writetodb(lat, lon, content,id);
    
    };


    end
    def writetodb(lat,lon,message,id=nil)
 
    $dbh=dbconnect   #hier eine global variable mit $

    if id.nil?
        sql = "insert into geopoints(lat,lon,message) values (?,?,?);"

        st=$dbh.prepare(sql);

        st.execute(lat,lon,message);

    else
        sql = "update geopoints set lat=?,lon=?,message=? where id =?;"
        
        st=$dbh.prepare(sql);

        st.execute(lat,lon,message,id);
    end

       
    end
end

Rack::Handler::FastCGI.run MessageSave.new
