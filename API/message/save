#! /usr/bin/ruby

require 'rubygems'
require 'connect.rb'
require 'xml'
require 'rack'

$dbh=dbconnect   #hier eine global variable mit $

def errorHandler(no, message)
    xml="<error no='"+no.to_s+"'>"+message+"</error>"
    return xml
end

XML::Error.set_handler do |error|
    xml = errorHandler(234, error.to_s)
    [200, {"Content-Type" => "text/xml"}, [xml]]
    return
end

class MessageSave

  
    def call(env)

    req= Rack::Request.new(env)

    begin  
      doc = XML::Document.string(req.body.read);
      relaxng_document = XML::Document.file('../../interface/message/save/request.rng')
      relaxng_schema = XML::RelaxNG.document(relaxng_document)
      rescue
      //nix
    end
    
    begin
      doc.validate_relaxng(relaxng_schema)
      rescue
      //nix
    end

    c=req.query_string()
    if(c=="die")
      abort
    end


  

    doc.find("/gts/content").each {|node| 
      lon=node.attributes.get_attribute("lon"); 
      lat=node.attributes.get_attribute("lat");
      
      begin 
        id = node.attributes.get_attribute("id");
      rescue
        id = nil;
      end                
    
      begin                                        
        content = node.first.content;
      rescue
        return
      end
    
      writetodb(lat, lon, content,id);
    };
  end
  
  
  def writetodb(lat.to_f,lon.to_f,message,id=nil)
   

      if id.nil?
        sql = "insert into geopoints(lat,lon,message) values (?,?,?);"
    
        st=$dbh.prepare(sql);
    
        st.execute(lat,lon,message);
    
      else
        sql = "update geopoints set lat=?,lon=?,message=? where id =?;"
        
        st=$dbh.prepare(sql);
        
                
        st.execute(lat,lon,message,id);
      end
  end
  
end

Rack::Handler::FastCGI.run MessageSave.new