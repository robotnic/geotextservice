#! /usr/bin/ruby

require 'rubygems'
require '../functions/connect.rb'
require 'xml'
require 'rack'
require 'logger'

$dbh=dbconnect   #hier eine global variable mit $

$username = 'arse';

XML::Error.set_handler(&XML::Error::QUIET_HANDLER)


class MessageSave

  
    def call(env)
        
        $dbh.ping()
		
        req= Rack::Request.new(env);
				
		#kill the server from outside
		c=req.query_string()
		if(c=="die")
            puts "FAAAAAAAAAAAATHER"
    		abort
		end #c==die end

		#Errorhandling
    
		begin
			doc = XML::Document.string(req.body.read);			
		rescue Exception => e
			xml = "<error no='1'>XML ERROR while calling  message/save: #{e.message}</error>"
			return [501,{"Content-Type" => "text/xml"},[xml]] 
		end #exception handling end
		

		#read the rng file
		begin
			relaxng_doc = XML::Document.file('../../interface/message/save/request.rng')
			relaxng_sch = XML::RelaxNG.document(relaxng_doc)
			#validate relax ng    
				begin 
					doc.validate_relaxng(relaxng_sch)
				rescue Exception => e
					xml = "<error no='7'>XML ERROR: #{e.message}</error>"
					return [501,{"Content-Type" => "text/xml"},[xml]]                
				end #validate_relaxng end

		rescue
			xml = "<error no='5'>Couldn't open relaxng file. Check permissions or path</error>"
			return [501,{"Content-Type" => "text/xml"},[xml]]
		end #read rng file end
		
		
    #loggedin key
		key=doc.root.attributes.get_attribute("key").value;
        #check ob user eingelogt ist
       sql_getuser = "select username from geologgedin where logginschlussel ='?';"
            
       st=$dbh.prepare(sql_getuser);
       st.execute(key);
       
        if $dbh.affected_rows > 0
        #user ist eingelogt
            st.fetch do |row|
                $username = row[0]
                
               # logger.debug {@$username.inspect}
                
                # puts $username.inspect
                # file = open('foo.log', File::WRONLY | File::APPEND | File::CREAT)
                # logger = Logger.new(file)
                # logger.error("asdfasdf")

            end #do end
        else
     #user ist nicht eingelogt -> error   
          xml = "<error no='666'>U r not loged in</error>"
         # return [501,{"Content-Type" => "text/xml"},[xml]]
        end #affected rows für user end
     
#benutzer ist eingelogt deshalb lesen wir die inhalte aus der xml antwort aus.
    xmlresponse = "<gts query='message/save'>"

    doc.find("/gts/content").each {|node| 
      lon=node.attributes.get_attribute("lon").value; 
      lat=node.attributes.get_attribute("lat").value;
     #wat ? 
      begin 
        id = node.attributes.get_attribute("id").value;
      rescue
        id = nil;
      end                
    #we read the contents
      begin                                        
        content = node.first.content;
      rescue
        xml = "<error='123'>u fail</error>"
        return [500,{"Content-Type" => "text/xml"},[xml]] 
      end
    #heilige widernatürliche unfähigkeit batman!
	begin                               
		if $username == nil
		  $username = 'aaa'
	  end
	  
	     returnary = writetodb(lat, lon, content, $username, id);
    rescue Exception => e
        xml = "<error no='6'>DB Error: #{e.message}.</error>"
       return[500,{"Content-Type" => "text/xml"},[xml]]
	end

     
     
     if id==nil
        xmlresponse = xmlresponse+"<content lat='#{lat}' lon='#{lon}' id='#{returnary[0]}' user='#{$username}' timestamp='#{returnary[1]}'>" 
     else
       #this never happens does it?
        xmlresponse = xmlresponse+"<content lat='#{lat}' lon='#{lon}' id='#{id}' user='#{$username}' timestamp='#{returnary[1]}'>" 
     end
     
     xmlresponse = xmlresponse+content+"</content>"
     
    };
    
      xmlresponse = xmlresponse+"</gts>"
      
      puts YAML::dump(xmlresponse)
      
       return [200,{"Content-Type" => "text/xml"},[xmlresponse]]
	end

  
  def writetodb(lat,lon,message,username,id=nil)   
      
      if id.nil?
     	sql="INSERT INTO geopoints ( `wgs` ,`lat`,`lon`, `message`,`username`)VALUES(GeomFromText(?),?,?,?,?)";
#         st.execute("POINT("+lat.to_s+" "+lon.to_s+")",content);   
#        sql = "insert into geopoints(lat,lon,message,username) values (?,?,?,?);"
    
        st=$dbh.prepare(sql);
        
        #sql2 = "select timestamp, id from geopoints where id = @@IDENTITY"
        st.execute("POINT("+lat.to_s+" "+lon.to_s+")",lat,lon,message,username);
        
        newid = $dbh.insert_id;
        sql2 = "select `time_stamp` from geopoints where id = ?"
                
        st=$dbh.prepare(sql2);
        st.execute(id);

        while row = st.fetch do
          
          timestamp = row[0];
        
        end
        
               
        returnary = [newid, timestamp]
                

      else
        
        sql = "update geopoints set lat=?,lon=?,message=?,username=? where id =?;"
        
        st=$dbh.prepare(sql);
                
        st.execute(lat,lon,message,username,id);
        
        sql2 = "select `time_stamp` from geopoints where id =?;"
        
        st=$dbh.prepare(sql2);
        st.execute(id);
        while row = st.fetch do
          
          timestamp = row[0];

        end
        
        
        
        returnary = [id, timestamp]
      end
      return(returnary);
      
  end
  
 
end

Rack::Handler::FastCGI.run MessageSave.new
